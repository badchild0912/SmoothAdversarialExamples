
export PYTHONPATH="${PYTHONPATH}:/udd/hzhang/cleverhans/"
+ export PYTHONPATH=:/udd/hzhang/cleverhans/
+ PYTHONPATH=:/udd/hzhang/cleverhans/
module load cuda/9.0.176
+ module load cuda/9.0.176
/soft/igrida/Modules/$MODULE_VERSION/bin/modulecmd bash $*
++ /soft/igrida/Modules/3.2.10/bin/modulecmd bash load cuda/9.0.176
+ eval CPLUS_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include ';export' 'CPLUS_INCLUDE_PATH;CUDA_HOME=/soft/igrida/cuda/9.0.176' ';export' 'CUDA_HOME;C_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include' ';export' 'C_INCLUDE_PATH;LD_LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64' ';export' 'LD_LIBRARY_PATH;LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64' ';export' 'LIBRARY_PATH;LOADEDMODULES=cuda/9.0.176' ';export' 'LOADEDMODULES;OPENCL_LIB_PATH=/lib64/' ';export' 'OPENCL_LIB_PATH;PATH=/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games' ';export' 'PATH;_LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176' ';export' '_LMFILES_;'
CPLUS_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include ;export CPLUS_INCLUDE_PATH;CUDA_HOME=/soft/igrida/cuda/9.0.176 ;export CUDA_HOME;C_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include ;export C_INCLUDE_PATH;LD_LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64 ;export LD_LIBRARY_PATH;LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64 ;export LIBRARY_PATH;LOADEDMODULES=cuda/9.0.176 ;export LOADEDMODULES;OPENCL_LIB_PATH=/lib64/ ;export OPENCL_LIB_PATH;PATH=/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games ;export PATH;_LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176 ;export _LMFILES_;
++ CPLUS_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include
++ export CPLUS_INCLUDE_PATH
++ CUDA_HOME=/soft/igrida/cuda/9.0.176
++ export CUDA_HOME
++ C_INCLUDE_PATH=/soft/igrida/cuda/9.0.176/include
++ export C_INCLUDE_PATH
++ LD_LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64
++ export LD_LIBRARY_PATH
++ LIBRARY_PATH=/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64
++ export LIBRARY_PATH
++ LOADEDMODULES=cuda/9.0.176
++ export LOADEDMODULES
++ OPENCL_LIB_PATH=/lib64/
++ export OPENCL_LIB_PATH
++ PATH=/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
++ export PATH
++ _LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176
++ export _LMFILES_
module load tensorfLow/1.8.0-py2.7
+ module load tensorfLow/1.8.0-py2.7
/soft/igrida/Modules/$MODULE_VERSION/bin/modulecmd bash $*
++ /soft/igrida/Modules/3.2.10/bin/modulecmd bash load tensorfLow/1.8.0-py2.7
+ eval CPLUS_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include ';export' 'CPLUS_INCLUDE_PATH;C_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include' ';export' 'C_INCLUDE_PATH;LD_LIBRARY_PATH=/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64' ';export' 'LD_LIBRARY_PATH;LIBRARY_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib:/soft/igrida/protobuf/3.6.0-py2.7/lib:/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64' ';export' 'LIBRARY_PATH;LOADEDMODULES=cuda/9.0.176:cuDNN/v7.0.4:protobuf/3.6.0-py2.7:tensorfLow/1.8.0-py2.7' ';export' 'LOADEDMODULES;PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/bin:/soft/igrida/protobuf/3.6.0-py2.7/bin:/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games' ';export' 'PATH;PYTHONPATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib/python2.7/site-packages:/udd/hzhang/cleverhans/:/soft/igrida/protobuf/3.6.0-py2.7/lib/python2.7/site-packages' ';export' 'PYTHONPATH;_LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176:/soft/igrida/modulefiles/libraries/cuDNN/v7.0.4:/soft/igrida/modulefiles/libraries/protobuf/3.6.0-py2.7:/soft/igrida/modulefiles/libraries/tensorfLow/1.8.0-py2.7' ';export' '_LMFILES_;'
CPLUS_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include ;export CPLUS_INCLUDE_PATH;C_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include ;export C_INCLUDE_PATH;LD_LIBRARY_PATH=/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64 ;export LD_LIBRARY_PATH;LIBRARY_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib:/soft/igrida/protobuf/3.6.0-py2.7/lib:/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64 ;export LIBRARY_PATH;LOADEDMODULES=cuda/9.0.176:cuDNN/v7.0.4:protobuf/3.6.0-py2.7:tensorfLow/1.8.0-py2.7 ;export LOADEDMODULES;PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/bin:/soft/igrida/protobuf/3.6.0-py2.7/bin:/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games ;export PATH;PYTHONPATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib/python2.7/site-packages:/udd/hzhang/cleverhans/:/soft/igrida/protobuf/3.6.0-py2.7/lib/python2.7/site-packages ;export PYTHONPATH;_LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176:/soft/igrida/modulefiles/libraries/cuDNN/v7.0.4:/soft/igrida/modulefiles/libraries/protobuf/3.6.0-py2.7:/soft/igrida/modulefiles/libraries/tensorfLow/1.8.0-py2.7 ;export _LMFILES_;
++ CPLUS_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include
++ export CPLUS_INCLUDE_PATH
++ C_INCLUDE_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/include:/soft/igrida/protobuf/3.6.0-py2.7/include:/soft/igrida/cuDNN/v7.0.4/cuda/include:/soft/igrida/cuda/9.0.176/include
++ export C_INCLUDE_PATH
++ LD_LIBRARY_PATH=/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64
++ export LD_LIBRARY_PATH
++ LIBRARY_PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib:/soft/igrida/protobuf/3.6.0-py2.7/lib:/soft/igrida/cuDNN/v7.0.4/cuda/lib64:/lib64/:/usr/lib/x86_64-linux-gnu/:/soft/igrida/cuda/9.0.176/lib:/soft/igrida/cuda/9.0.176/lib64:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/lib:/lib64:/soft/igrida/cuda/9.0.176/extras/CUPTI/lib64
++ export LIBRARY_PATH
++ LOADEDMODULES=cuda/9.0.176:cuDNN/v7.0.4:protobuf/3.6.0-py2.7:tensorfLow/1.8.0-py2.7
++ export LOADEDMODULES
++ PATH=/soft/igrida/tensorFlow/1.8.0-py2.7/bin:/soft/igrida/protobuf/3.6.0-py2.7/bin:/soft/igrida/cuda/9.0.176/bin/:/soft/igrida/cuda/9.0.176/samples/bin/x86_64/linux/release:/usr/local/apr/bin:/soft/igrida/spack/bin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
++ export PATH
++ PYTHONPATH=/soft/igrida/tensorFlow/1.8.0-py2.7/lib/python2.7/site-packages:/udd/hzhang/cleverhans/:/soft/igrida/protobuf/3.6.0-py2.7/lib/python2.7/site-packages
++ export PYTHONPATH
++ _LMFILES_=/soft/igrida/modulefiles/applications/cuda/9.0.176:/soft/igrida/modulefiles/libraries/cuDNN/v7.0.4:/soft/igrida/modulefiles/libraries/protobuf/3.6.0-py2.7:/soft/igrida/modulefiles/libraries/tensorfLow/1.8.0-py2.7
++ export _LMFILES_
source /nfs/nas4/data-hanwei/data-hanwei/anacoda2-new/bin/activate
+ source /nfs/nas4/data-hanwei/data-hanwei/anacoda2-new/bin/activate
#!/bin/sh
_CONDA_ROOT="/nfs/pyrex/raid6/hzhang/anacoda2-new"
++ _CONDA_ROOT=/nfs/pyrex/raid6/hzhang/anacoda2-new
\. "$_CONDA_ROOT/etc/profile.d/conda.sh" || return $?
++ . /nfs/pyrex/raid6/hzhang/anacoda2-new/etc/profile.d/conda.sh
_CONDA_EXE="/nfs/pyrex/raid6/hzhang/anacoda2-new/bin/conda"
+++ _CONDA_EXE=/nfs/pyrex/raid6/hzhang/anacoda2-new/bin/conda
_CONDA_ROOT="/nfs/pyrex/raid6/hzhang/anacoda2-new"
+++ _CONDA_ROOT=/nfs/pyrex/raid6/hzhang/anacoda2-new
_conda_set_vars() {
    # set _CONDA_SHELL_FLAVOR
    if [ -n "${BASH_VERSION:+x}" ]; then
        _CONDA_SHELL_FLAVOR=bash
    elif [ -n "${ZSH_VERSION:+x}" ]; then
        _CONDA_SHELL_FLAVOR=zsh
    elif [ -n "${KSH_VERSION:+x}" ]; then
        _CONDA_SHELL_FLAVOR=ksh
    elif [ -n "${POSH_VERSION:+x}" ]; then
        _CONDA_SHELL_FLAVOR=posh
    else
        # default to dash; if we run into a problem here, please raise an issue
        _CONDA_SHELL_FLAVOR=dash
    fi

    if [ -z "${_CONDA_EXE+x}" ]; then
        if [ -n "${_CONDA_ROOT:+x}" ]; then
            # typically this should be for dev only; _CONDA_EXE should be written at top of file
            # for normal installs
            _CONDA_EXE="$_CONDA_ROOT/conda/shell/bin/conda"
        fi
        if ! [ -f "${_CONDA_EXE-x}" ]; then
            _CONDA_EXE="$PWD/conda/shell/bin/conda"
        fi
    fi

    # We're not allowing PS1 to be unbound. It must at least be set.
    # However, we're not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi

}


_conda_hashr() {
    case "$_CONDA_SHELL_FLAVOR" in
        zsh) \rehash;;
        posh) ;;
        *) \hash -r;;
    esac
}


_conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi

    \local ask_conda
    ask_conda="$(PS1="$PS1" $_CONDA_EXE shell.posix activate "$@")" || \return $?
    \eval "$ask_conda"

    _conda_hashr
}

_conda_deactivate() {
    \local ask_conda
    ask_conda="$(PS1="$PS1" $_CONDA_EXE shell.posix deactivate "$@")" || \return $?
    \eval "$ask_conda"

    _conda_hashr
}

_conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="$PS1" $_CONDA_EXE shell.posix reactivate)" || \return $?
    \eval "$ask_conda"

    _conda_hashr
}


conda() {
    if [ "$#" -lt 1 ]; then
        $_CONDA_EXE
    else
        \local cmd="$1"
        shift
        case "$cmd" in
            activate)
                _conda_activate "$@"
                ;;
            deactivate)
                _conda_deactivate "$@"
                ;;
            install|update|uninstall|remove)
                $_CONDA_EXE "$cmd" "$@" && _conda_reactivate
                ;;
            *)
                $_CONDA_EXE "$cmd" "$@"
                ;;
        esac
    fi
}


_conda_set_vars
+++ _conda_set_vars
+++ '[' -n x ']'
+++ _CONDA_SHELL_FLAVOR=bash
+++ '[' -z x ']'
+++ '[' -z '' ']'
+++ PS1=

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
fi
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0

_conda_activate "$@"
++ _conda_activate
++ '[' -n '' ']'
++ local ask_conda
PS1="$PS1" $_CONDA_EXE shell.posix activate "$@"
+++ PS1=
+++ /nfs/pyrex/raid6/hzhang/anacoda2-new/bin/conda shell.posix activate
/nfs/pyrex/raid6/hzhang/anacoda2-new/etc/profile.d/conda.sh: /nfs/pyrex/raid6/hzhang/anacoda2-new/bin/conda: /nfs/pyrex/raid6/hzhang/anacoda2-new/bin/python: bad interpreter: Too many levels of symbolic links
++ ask_conda=
++ return 126

ls /etc
+ ls /etc

echo
+ echo
echo "=============== RUN ${OAR_JOB_ID} ==============="
+ echo '=============== RUN 6865563 ==============='
python scw_inc.py
+ python scw_inc.py
2019-06-20 14:57:59.503582: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-06-20 14:57:59.939386: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: 
name: GeForce GTX TITAN X major: 5 minor: 2 memoryClockRate(GHz): 1.076
pciBusID: 0000:04:00.0
totalMemory: 11.93GiB freeMemory: 11.81GiB
2019-06-20 14:57:59.939420: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0
2019-06-20 14:58:00.384174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-06-20 14:58:00.384212: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 
2019-06-20 14:58:00.384219: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N 
2019-06-20 14:58:00.384548: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11438 MB memory) -> physical GPU (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:04:00.0, compute capability: 5.2)
INFO:tensorflow:Restoring parameters from ../models/inception_v3.ckpt
/udd/hzhang/cleverhans/cleverhans/attacks/__init__.py:218: UserWarning: Using a dict for `feedable_kwargs is deprecated.Switch to using a tuple.It is not longer necessary to specify the types of the arguments---we build a different graph for each received type.Using a dict may become an error on or after 2019-04-18.
  warnings.warn("Using a dict for `feedable_kwargs is deprecated."
[INFO 2019-06-20 14:58:05,982 cleverhans] Constructing new graph for attack SmoothCarliniWagnerL2CG
